/*
 * Connect 4 assignment
 * Date - 20 Sept 2021
 * Author - Victor Yu
 * Teaher - Mr.Ho
 * 2 minutes or less to explain the product
 */

import java.util.Scanner;
public class connect4 {

  
  //This is a function that will find the bottom open spot and place it in the slot
  public static void coinPlace(int col, char color, char[][] arr) {
    for(int i = (arr.length - 1); i >= 0; i--){
      if (Character.compare(arr[i][col], '0') == 0){
        arr[i][col] = color; 
        break;
      }
    }
    System.out.println("This column is full try again");
  }
  
  /**
   * Description: Fills the board with a char Nested loop that valorizes the indexes
   * @param arr is the array
   */
  public static void setArray(char[][] arr) {
    for (int i = 0; i < arr.length; i++) {
      for (int j = 0; j < arr[0].length; j++) {
        
        arr[i][j] = '0';
      }
    }
  }
  
  
  /**
   * Description: Prints out the board with lines in-between 
   * Two loops to cycle through the entire array
   * @param arr is the array
   */
  public static void printArray(char[][] arr) {
    for (int i = 0; i < arr.length; i++) {
      System.out.print("| ");
      
      for (int j = 0; j < arr[0].length; j++) {
        System.out.print(arr[i][j] + " | ");
      }
      
      System.out.println();
    }
    System.out.println("¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯");
  }
  
  
  /**
   * Description: Asks and chooses gamemode for the game
   * @param reader is the Scanner
   */
  public static boolean gamemodeSelection(Scanner reader) {
    Boolean stillChoosing = true; //Keeps asking for gamemode till player gives vaild response
    
    do {
      System.out.println("Do you want to play PvP or PvC"); //asks for what you want to play
      String choice = reader.nextLine().toLowerCase();
      
      if (choice.equals("pvp")) { //if it's either PvP or PvC it will return and end the method so you don't need to change the boolean 
        System.out.println("You have choosen PvP..." + "\n" + "Player One Starting Now" + "\n");
        return (false);
        
      } else if (choice.equals("pvc")) {
        System.out.println("You have choosen PvC..." + "\n" + "Player One Starting Now" + "\n");
        return (true);
      } else {
        System.out.println("Try again...");
      }
    }
    while (stillChoosing); //keeps it runnning
    return (false); // So VScode stops yelling at me
  }
  
  public static int playerMove(Scanner reader, int height, int width) {// selection for the coin placement
    int moveSelect;
    do {
      System.out.println("Give a selection"); 
      moveSelect = reader.nextInt() - 1;
      if(moveSelect < 0  || moveSelect >= 7){
        System.out.println("haha good try \n2please choose a number from 1-7");
      }
    }while(moveSelect < 0  || moveSelect >= 7);
      return moveSelect;
  }
  
  public static char colorSwitch(char color){
    if(color == 'R'){
      return 'Y';
    }
    if(color == 'Y'){
      return 'R';
    }
    return color;
  }
  
  public static void main(String[] args) {
    
    // Setting up things 
    int height = 6;
    int length = 7;
    char[][] gridArray = new char[height][length]; // This is the array that represents the layout of the game
    Scanner reader = new Scanner(System.in); //Creates the Scanner
    char playerColor = 'R';
    boolean gamemode;
    boolean running = true;
    int player = 1; // 1 represents a player/On | 0 represents ai/Off
    
    
    gamemode = gamemodeSelection(reader); //returns false for PvP and true PvC
    setArray(gridArray);
    colorSwitch(playerColor);
    do {
      printArray(gridArray);
      if (player == 1) { // This is the player move
        //Player move
        coinPlace(playerMove(reader, height, length), playerColor, gridArray);
        if (gamemode) {
          player = 0;
          playerColor = 'Y';
        }
        playerColor = colorSwitch(playerColor);
      }
      else { // for PvC it will also start on the first one but it will switch between if and else because it will switch turms with ai and player
        //player
        playerColor = colorSwitch(playerColor);
        player = 1;
      }
      
      
      
      
    }while(running);
    reader.close();
    
  }
}
